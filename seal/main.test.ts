import { Program } from "./main.ts";
import { assertEquals } from "https://deno.land/std@0.204.0/assert/mod.ts";

Deno.test("smoke", () => {
  const programPath = Deno.makeTempFileSync();
  Deno.writeTextFileSync(
    programPath,
    `
#!/bin/sh
# generated by deno install
exec deno run --allow-read --allow-write --allow-net --allow-env --allow-run=git --name=molt --no-config 'https://deno.land/x/molt/cli.ts' "$@"`,
  );
  const program = new Program(programPath);
  assertEquals(program.read(), { allowed: true });
  assertEquals(program.write(), { allowed: true });
  assertEquals(program.run(), { allowed: true, entries: ["git"] });
  assertEquals(program.env(), { allowed: true });
  assertEquals(program.net(), { allowed: true });

  // manipulation test
  program
    .setRead({ allowed: false })
    .setFfi({ allowed: true, entries: ["/path/to/ffi_lib.so"] })
    .setRun({ allowed: true, entries: ["ls"] })
    .commit();

  assertEquals(program.read(), { allowed: false });
  assertEquals(program.ffi(), {
    allowed: true,
    entries: ["/path/to/ffi_lib.so"],
  });
  assertEquals(program.run(), { allowed: true, entries: ["ls"] });

  program.setFfi({ allowed: true, entries: ["/path/to/ffi_lib2.so"] });
  assertEquals(program.ffi(), {
    allowed: true,
    entries: ["/path/to/ffi_lib2.so"],
  });

  program.setPermissionByName("ffi", { allowed: false });
  assertEquals(program.ffi(), { allowed: false });
});
